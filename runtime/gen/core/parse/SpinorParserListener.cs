//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\JohnB\Desktop\HyperProjects\Spinor\runtime\src\core\parse\SpinorParser.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HyperSphere {
using runtime.core.parse;
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SpinorParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface ISpinorParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpinorParser.topExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopExpr([NotNull] SpinorParser.TopExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpinorParser.topExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopExpr([NotNull] SpinorParser.TopExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpinorParser.exprBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprBlock([NotNull] SpinorParser.ExprBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpinorParser.exprBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprBlock([NotNull] SpinorParser.ExprBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] SpinorParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] SpinorParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>module</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] SpinorParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>module</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] SpinorParser.ModuleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>struct</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct([NotNull] SpinorParser.StructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>struct</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct([NotNull] SpinorParser.StructContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>abstract</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstract([NotNull] SpinorParser.AbstractContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>abstract</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstract([NotNull] SpinorParser.AbstractContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>block</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] SpinorParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>block</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] SpinorParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExpr([NotNull] SpinorParser.TupleExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExpr([NotNull] SpinorParser.TupleExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>name</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] SpinorParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>name</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] SpinorParser.NameContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>using</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsing([NotNull] SpinorParser.UsingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>using</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsing([NotNull] SpinorParser.UsingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>importExpr</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportExpr([NotNull] SpinorParser.ImportExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>importExpr</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportExpr([NotNull] SpinorParser.ImportExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpr([NotNull] SpinorParser.LiteralExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="SpinorParser.primitiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpr([NotNull] SpinorParser.LiteralExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpinorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] SpinorParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpinorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] SpinorParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpinorParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTuple([NotNull] SpinorParser.TupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpinorParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTuple([NotNull] SpinorParser.TupleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpinorParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] SpinorParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpinorParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] SpinorParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StrText</c>
	/// labeled alternative in <see cref="SpinorParser.stringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrText([NotNull] SpinorParser.StrTextContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StrText</c>
	/// labeled alternative in <see cref="SpinorParser.stringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrText([NotNull] SpinorParser.StrTextContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StrNameInterp</c>
	/// labeled alternative in <see cref="SpinorParser.stringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrNameInterp([NotNull] SpinorParser.StrNameInterpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StrNameInterp</c>
	/// labeled alternative in <see cref="SpinorParser.stringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrNameInterp([NotNull] SpinorParser.StrNameInterpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StrExpr</c>
	/// labeled alternative in <see cref="SpinorParser.stringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrExpr([NotNull] SpinorParser.StrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StrExpr</c>
	/// labeled alternative in <see cref="SpinorParser.stringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrExpr([NotNull] SpinorParser.StrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>floatingPoint</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatingPoint([NotNull] SpinorParser.FloatingPointContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>floatingPoint</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatingPoint([NotNull] SpinorParser.FloatingPointContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>integer</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] SpinorParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>integer</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] SpinorParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>symbol</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbol([NotNull] SpinorParser.SymbolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>symbol</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbol([NotNull] SpinorParser.SymbolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>str</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStr([NotNull] SpinorParser.StrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>str</c>
	/// labeled alternative in <see cref="SpinorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStr([NotNull] SpinorParser.StrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpinorParser.importName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportName([NotNull] SpinorParser.ImportNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpinorParser.importName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportName([NotNull] SpinorParser.ImportNameContext context);
}
} // namespace HyperSphere
